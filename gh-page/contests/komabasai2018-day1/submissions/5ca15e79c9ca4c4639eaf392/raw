global _start
p:mov eax,0
A:inc cx
movzx bx,byte[ecx-1]
cmp bx,10
je B
mov dx,10
mul dx
lea ax,[eax+ebx-48]
jmp A
B:ret
f:mov eax,0
C:cmp ax,si
je D
mov byte[ecx+eax],bl
inc ax
jmp C
D:mov byte[ecx+esi],10
ret
w:mov eax,4
int 80h
  ret
_start:sub esp,198
mov eax,3
mov ebx,0
mov ecx,esp
mov edx,9
int 80h
call p
lea di,[eax-2]
call p
mov esi,eax
mov ecx,esp
mov bx,32
call f
mov byte[ecx],42
mov byte[ecx+esi-1],42
add ecx,99
mov bx,42
call f
mov bx,1
lea dx,[esi+1]
call w
sub ecx,99
I:call w
dec di
jne I
add ecx,99
call w
mov eax,1
mov bx,0
int 80h