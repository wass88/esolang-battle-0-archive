global _start
p:mov eax,0
.A:inc cx
movzx bx,byte[ecx-1]
cmp bx,10
je .B
mov dx,10
mul dx
lea ax,[eax+ebx-48]
jmp .A
.B:ret
f:mov eax,0
.A:cmp ax,si
je .B
mov byte[ecx+eax],bl
inc ax
jmp .A
.B:mov byte[ecx+esi],10
ret
_start:sub esp,198
mov eax,3
mov ebx,0
lea ecx,[esp]
mov edx,9
int 80h
call p
mov di,ax
call p
mov esi,eax
lea ecx,[esp+99]
mov bx,42
call f
sub ecx,99
mov bx,32
call f
mov byte[ecx],42
mov byte[ecx+esi-1],42
mov eax,4
mov bx,1
lea ecx,[esp+99]
lea edx,[esi+1]
int 80h
sub ecx,99
sub di,2
.I:mov eax,4
int 80h
dec di
jne .I
mov eax,4
add ecx,99
int 80h
mov eax,1
mov bx,0
int 80h